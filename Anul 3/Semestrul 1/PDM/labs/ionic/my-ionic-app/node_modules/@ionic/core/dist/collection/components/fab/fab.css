:host {
  position: absolute;
  width: fit-content;
  height: fit-content;
  z-index: 999;
}

:host(.fab-horizontal-center) {
  left: 0px;
  right: 0px;
  -webkit-margin-start: auto;
  margin-inline-start: auto;
  -webkit-margin-end: auto;
  margin-inline-end: auto;
}

@supports (inset-inline-start: 0) {
  :host(.fab-horizontal-start) {
    inset-inline-start: calc(10px + var(--ion-safe-area-left, 0px));
  }
}
@supports not (inset-inline-start: 0) {
  :host(.fab-horizontal-start) {
    left: calc(10px + var(--ion-safe-area-left, 0px));
  }
  :host-context([dir=rtl]):host(.fab-horizontal-start), :host-context([dir=rtl]).fab-horizontal-start {
    left: unset;
    right: unset;
    right: calc(10px + var(--ion-safe-area-left, 0px));
  }
  @supports selector(:dir(rtl)) {
    :host(.fab-horizontal-start):dir(rtl) {
      left: unset;
      right: unset;
      right: calc(10px + var(--ion-safe-area-left, 0px));
    }
  }
}

@supports (inset-inline-start: 0) {
  :host(.fab-horizontal-end) {
    inset-inline-end: calc(10px + var(--ion-safe-area-right, 0px));
  }
}
@supports not (inset-inline-start: 0) {
  :host(.fab-horizontal-end) {
    right: calc(10px + var(--ion-safe-area-right, 0px));
  }
  :host-context([dir=rtl]):host(.fab-horizontal-end), :host-context([dir=rtl]).fab-horizontal-end {
    left: unset;
    right: unset;
    left: calc(10px + var(--ion-safe-area-right, 0px));
  }
  @supports selector(:dir(rtl)) {
    :host(.fab-horizontal-end):dir(rtl) {
      left: unset;
      right: unset;
      left: calc(10px + var(--ion-safe-area-right, 0px));
    }
  }
}

:host(.fab-vertical-top) {
  top: 10px;
}

/**
 * Reset the top value since edge
 * styles use margin-top.
 */
:host(.fab-vertical-top.fab-edge) {
  top: 0;
}

/**
 * We need to adjust the parent FAB button up by half
 * its height so that half of it sits on the header. As a result,
 * we target the slotted ion-fab-button instead of targeting the host.
 */
:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-button) {
  margin-top: -50%;
}

/**
 * The small FAB button adds top and bottom margin. We need to account for
 * that margin when we adjust the FAB button for edge styles since we
 * are overriding the margin-top value below.
 */
:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-button.fab-button-small) {
  margin-top: calc((-100% + 16px) / 2);
}

/**
 * Since we are adjusting the FAB button we also need
 * to adjust the sibling ion-fab-list otherwise there will be
 * a gap between the parent FAB button and the associated list.
 */
:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-start),
:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-end) {
  margin-top: -50%;
}

:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-top),
:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-bottom) {
  margin-top: calc(50% + 10px);
}

:host(.fab-vertical-bottom) {
  bottom: 10px;
}

/**
 * Reset the bottom value since edge
 * styles use margin-bottom.
 */
:host(.fab-vertical-bottom.fab-edge) {
  bottom: 0;
}

/**
 * We need to adjust the parent FAB button down by half
 * its height so that half of it sits on the footer. As a result,
 * we target the slotted ion-fab-button instead of targeting the host.
 */
:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-button) {
  margin-bottom: -50%;
}

/**
 * The small FAB button adds top and bottom margin. We need to account for
 * that margin when we adjust the FAB button for edge styles since we
 * are overriding the margin-bottom value below.
 */
:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-button.fab-button-small) {
  margin-bottom: calc((-100% + 16px) / 2);
}

/**
 * Since we are adjusting the FAB button we also need
 * to adjust the sibling ion-fab-list otherwise there will be
 * a gap between the parent FAB button and the associated list.
 */
:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-start),
:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-end) {
  margin-bottom: -50%;
}

:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-top),
:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-bottom) {
  margin-bottom: calc(50% + 10px);
}

:host(.fab-vertical-center) {
  top: 0px;
  bottom: 0px;
  margin-top: auto;
  margin-bottom: auto;
}